// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
  "name": "realSrg-node-ts-turbo-base",
  "image": "mcr.microsoft.com/devcontainers/typescript-node",

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        // cloud
        "googlecloudtools.cloudcode",

        // css
        "urbantrout.refactor-css",
        "ecmel.vscode-html-css",

        // docker
        "ms-azuretools.vscode-docker",
        "dunstontc.vscode-docker-syntax",

        // git
        "codezombiech.gitignore",
        "donjayamanne.githistory",
        "GitHub.remotehub",
        "github.vscode-github-actions",
        "eamodio.gitlens",
        "michelemelluso.gitignore",
        "felipecaputo.git-project-manager",

        // icons
        "emmanuelbeziat.vscode-great-icons",
        "vscode-icons-team.vscode-icons",

        // cloud / k8s / terraform
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "HashiCorp.terraform",

        // next.js
        "NextNav.NextNav",

        // npm/pnpm
        "christian-kohler.npm-intellisense",
        "Jacano.vscode-pnpm",

        // path
        "christian-kohler.path-intellisense",

        // remote
        "ms-vscode.remote-serv",

        // tailwind
        "austenc.tailwind-docs",
        "bourhaouta.tailwindshades",
        "bradlc.vscode-tailwindcss",
        "heybourn.headwind",
        "PeterMekhaeil.vscode-tailwindcss-explorer",

        // testing / linting
        "ms-vscode.test-adapter-converter",
        "ms-playwright.playwright",
        "vitest.explorer",
        "hbenl.vscode-test-explorer",
        "esbenp.prettier-vscode",

        // typescript
        "mxsdev.typescript-explorer",
        "ms-vscode.vscode-typescript-next",
        "Orta.vscode-twoslash-queries",

        // yaml
        "redhat.vscode-yaml"
      ]
    }
  },

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    // docker-in-docker is preferable as it allows to isolate dev environment from the host
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": false,
      "azureDnsAutoDetection": false
    },    
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": false
    },
    "ghcr.io/jungaretti/features/make:1": {},
    "ghcr.io/devcontainers/features/python:1": {},
    "ghcr.io/devcontainers-contrib/features/turborepo-npm:1": {}
  }  

  // Dont' use 'postCreateCommand' as it will run on final devcontainer therefore
  // - effects won'd be prebuild
  // - can only work with files from the target repo
  // Instead either run postCreateCommand in the consuming repo
  // or, better, implement as a custome feature so that effects were pre-built
  // https://containers.dev/guide/author-a-feature
  // "postCreateCommand": ""  

  // Extra steps after build:
  // git config user.name "Your Name"
  // git config user.email "youremail@yourdomain.com"
  // (no global to avoid rewrite every time container rebuilds)
}
